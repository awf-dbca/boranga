# Generated by Django 3.2.25 on 2024-04-23 05:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('boranga', '0229_merge_20240422_1409'),
    ]

    operations = [
        migrations.RenameModel(
            old_name='AnimalObservation',
            new_name='OCRAnimalObservation',
        ),
        migrations.RenameModel(
            old_name='AssociatedSpecies',
            new_name='OCRAssociatedSpecies',
        ),
        migrations.RenameModel(
            old_name='FireHistory',
            new_name='OCRFireHistory',
        ),
        migrations.RenameModel(
            old_name='HabitatComposition',
            new_name='OCRHabitatComposition',
        ),
        migrations.RenameModel(
            old_name='HabitatCondition',
            new_name='OCRHabitatCondition',
        ),
        migrations.RenameModel(
            old_name='Identification',
            new_name='OCRIdentification',
        ),
        migrations.RenameModel(
            old_name='ObservationDetail',
            new_name='OCRObservationDetail',
        ),
        migrations.RenameModel(
            old_name='ObserverDetail',
            new_name='OCRObserverDetail',
        ),
        migrations.RenameModel(
            old_name='PlantCount',
            new_name='OCRPlantCount',
        ),
        migrations.CreateModel(
            name='OCCPlantCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_population_area', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_alive_mature', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_dead_mature', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_alive_juvenile', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_dead_juvenile', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_alive_seedling', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_dead_seedling', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_alive_unknown', models.IntegerField(blank=True, default=0, null=True)),
                ('detailed_dead_unknown', models.IntegerField(blank=True, default=0, null=True)),
                ('simple_alive', models.IntegerField(blank=True, default=0, null=True)),
                ('simple_dead', models.IntegerField(blank=True, default=0, null=True)),
                ('quadrats_present', models.BooleanField(blank=True, null=True)),
                ('quadrats_data_attached', models.BooleanField(blank=True, null=True)),
                ('quadrats_surveyed', models.IntegerField(blank=True, default=0, null=True)),
                ('individual_quadrat_area', models.IntegerField(blank=True, default=0, null=True)),
                ('total_quadrat_area', models.IntegerField(blank=True, default=0, null=True)),
                ('flowering_plants_per', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('clonal_reproduction_present', models.BooleanField(blank=True, null=True)),
                ('vegetative_state_present', models.BooleanField(blank=True, null=True)),
                ('flower_bud_present', models.BooleanField(blank=True, null=True)),
                ('flower_present', models.BooleanField(blank=True, null=True)),
                ('immature_fruit_present', models.BooleanField(blank=True, null=True)),
                ('ripe_fruit_present', models.BooleanField(blank=True, null=True)),
                ('dehisced_fruit_present', models.BooleanField(blank=True, null=True)),
                ('pollinator_observation', models.CharField(blank=True, max_length=1000, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('counted_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.countedsubject')),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plant_count', to='boranga.occurrence')),
                ('plant_condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.plantcondition')),
                ('plant_count_accuracy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.plantcountaccuracy')),
                ('plant_count_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.plantcountmethod')),
            ],
        ),
        migrations.CreateModel(
            name='OCCObservationDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_surveyed', models.IntegerField(blank=True, default=0, null=True)),
                ('survey_duration', models.IntegerField(blank=True, default=0, null=True)),
                ('observation_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.observationmethod')),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observation_detail', to='boranga.occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='OCCIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_confirmed_by', models.CharField(blank=True, max_length=1000, null=True)),
                ('permit_id', models.CharField(blank=True, max_length=500, null=True)),
                ('collector_number', models.CharField(blank=True, max_length=500, null=True)),
                ('barcode_number', models.CharField(blank=True, max_length=500, null=True)),
                ('identification_comment', models.TextField(blank=True, null=True)),
                ('identification_certainty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.identificationcertainty')),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identification', to='boranga.occurrence')),
                ('permit_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.permittype')),
                ('sample_destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.sampledestination')),
                ('sample_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.sampletype')),
            ],
        ),
        migrations.CreateModel(
            name='OCCHabitatCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pristine', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('excellent', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('very_good', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('good', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('degraded', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('completely_degraded', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_condition', to='boranga.occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='OCCHabitatComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land_form', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=250, null=True)),
                ('loose_rock_percent', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('water_quality', models.CharField(blank=True, max_length=500, null=True)),
                ('habitat_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('drainage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.drainage')),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_composition', to='boranga.occurrence')),
                ('rock_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.rocktype')),
                ('soil_colour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.soilcolour')),
                ('soil_condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.soilcondition')),
                ('soil_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.soiltype')),
            ],
        ),
        migrations.CreateModel(
            name='OCCFireHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_fire_estimate', models.DateField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('intensity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.intensity')),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fire_history', to='boranga.occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='OCCAssociatedSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_species', models.TextField(blank=True)),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='associated_species', to='boranga.occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='OCCAnimalObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_detection_method', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=250, null=True)),
                ('reproductive_maturity', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=250, null=True)),
                ('secondary_sign', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=250, null=True)),
                ('total_count', models.IntegerField(blank=True, default=0, null=True)),
                ('distinctive_feature', models.CharField(blank=True, max_length=1000, null=True)),
                ('action_taken', models.CharField(blank=True, max_length=1000, null=True)),
                ('action_required', models.CharField(blank=True, max_length=1000, null=True)),
                ('observation_detail_comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('alive_adult', models.IntegerField(blank=True, default=0, null=True)),
                ('dead_adult', models.IntegerField(blank=True, default=0, null=True)),
                ('alive_juvenile', models.IntegerField(blank=True, default=0, null=True)),
                ('dead_juvenile', models.IntegerField(blank=True, default=0, null=True)),
                ('alive_pouch_young', models.IntegerField(blank=True, default=0, null=True)),
                ('dead_pouch_young', models.IntegerField(blank=True, default=0, null=True)),
                ('alive_unsure', models.IntegerField(blank=True, default=0, null=True)),
                ('dead_unsure', models.IntegerField(blank=True, default=0, null=True)),
                ('animal_health', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.animalhealth')),
                ('death_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.deathreason')),
                ('occurrence', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='animal_observation', to='boranga.occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='OCCObserverDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observer_name', models.CharField(blank=True, max_length=250, null=True)),
                ('role', models.CharField(blank=True, max_length=250, null=True)),
                ('contact', models.CharField(blank=True, max_length=250, null=True)),
                ('organisation', models.CharField(blank=True, max_length=250, null=True)),
                ('main_observer', models.BooleanField(blank=True, null=True)),
                ('occurrence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observer_detail', to='boranga.occurrence')),
            ],
            options={
                'unique_together': {('observer_name', 'occurrence')},
            },
        ),
    ]
