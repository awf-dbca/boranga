# Generated by Django 5.0.9 on 2024-10-09 05:02

import django.core.files.storage
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('boranga', '0482_occurrencereportbulkimportschemacolumn_is_emailuser_column_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='occurrencereportproposalrequest',
            name='officer',
        ),
        migrations.RemoveField(
            model_name='occurrencereportproposalrequest',
            name='subject',
        ),
        migrations.AlterField(
            model_name='animalhealth',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='coordinatesource',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='countedsubject',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='currentimpact',
            name='name',
            field=models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='deathreason',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='district',
            name='name',
            field=models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='documentcategory',
            name='document_category_name',
            field=models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='documentsubcategory',
            name='document_sub_category_name',
            field=models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='drainage',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='identificationcertainty',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='intensity',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='landform',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='locationaccuracy',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='observationmethod',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='occurrencetenurepurpose',
            name='code',
            field=models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='occurrencetenurepurpose',
            name='label',
            field=models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='occurrencetenurevesting',
            name='code',
            field=models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='occurrencetenurevesting',
            name='label',
            field=models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='permittype',
            name='name',
            field=models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='plantcondition',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='plantcountaccuracy',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='plantcountmethod',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='potentialimpact',
            name='name',
            field=models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='potentialthreatonset',
            name='name',
            field=models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='primarydetectionmethod',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='proposalamendmentreason',
            name='reason',
            field=models.CharField(max_length=125, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')], verbose_name='Reason'),
        ),
        migrations.AlterField(
            model_name='region',
            name='name',
            field=models.CharField(default=None, max_length=200, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='reproductivestate',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='rocktype',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='sampledestination',
            name='name',
            field=models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='sampletype',
            name='name',
            field=models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='secondarysign',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='soilcolour',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='soilcondition',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='soiltype',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='submittercategory',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='threatagent',
            name='name',
            field=models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='threatcategory',
            name='name',
            field=models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
        migrations.AlterField(
            model_name='wildstatus',
            name='name',
            field=models.CharField(max_length=250, unique=True, validators=[django.core.validators.RegexValidator('[,]', code='comma_not_allowed', inverse_match=True, message='Commas not allowed in the display field for a django lookup.')]),
        ),
    ]
